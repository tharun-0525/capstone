name: Build and Push Container Images

on:
  push:
    branches:
      - main
    paths:
      - services/**
    tags:
      - "**@[0-9]*.[0-9]*.[0-9]*" # service/foo/bar@X.Y.Z

  workflow_dispatch:
    inputs:
      service:
        description: "Service to build"
        type: choice
        required: true
        options:
          - services/go/api-golang
          - services/node/api-node
          - services/other/postgresql
          - services/python/load-generator-python
          - services/react/client-react
      version:
        description: "Version/tag to use (optional; defaults generating with git describe)"
        required: false
        type: string

permissions:
  actions: write # used to trigger deploy workflow
  contents: read

jobs:
  filter:
    runs-on: ubuntu-24.04
    outputs:
      services: ${{ steps.set-output.outputs.services }}
      environment: ${{ steps.set-output.outputs.environment }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        if: ${{ github.event_name == 'push' && github.ref_type == 'branch' && github.ref_name == 'main' }}
      - name: Paths Changes Filter
        id: filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        if: ${{ github.event_name == 'push' && github.ref_type == 'branch' && github.ref_name == 'main' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: .github/utils/file-filters.yaml
      - name: Set Output
        id: set-output
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo 'services=["${{ inputs.service }}"]' >> "$GITHUB_OUTPUT"
            echo 'environment=development' >> "$GITHUB_OUTPUT"

          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            tag="${GITHUB_REF_NAME}"        # e.g. service-a@1.2.3
            svc="${tag%%@*}"
            echo "services=[\"$svc\"]" >> "$GITHUB_OUTPUT"
            echo 'environment=production' >> "$GITHUB_OUTPUT"

          else # push to main
            echo 'services=${{ steps.filter.outputs.changes }}' >> "$GITHUB_OUTPUT"
            echo 'environment=staging' >> "$GITHUB_OUTPUT"
          fi

  build-push-container-images:
    runs-on: ubuntu-24.04
    if: ${{ needs.filter.outputs.services != '[]' && needs.filter.outputs.services != '' }}
    needs: filter
    strategy:
      matrix:
        service: ${{ fromJson(needs.filter.outputs.services) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Setting fetch-depth: 0 ensure tags are fetched (so git describe works properly)
          fetch-depth: 0
      - uses: ./.github/actions/setup-dependencies
        with:
          install_task: "true"
      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # TODO: Replace with namespace setup
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Compute image tag
        id: image-tag
        working-directory: ${{ matrix.service }}
        env:
          ENVIRONMENT: ${{ needs.filter.outputs.environment }}
          INPUT_VERSION: ${{ github.event_name == 'workflow_dispatch' && inputs.version || '' }}
          SERVICE: ${{ matrix.service }}
        shell: bash
        run: |
          if [[ -n "$INPUT_VERSION" ]]; then
            version=$INPUT_VERSION
            image_tag=$(task utils:manual-version-tag -- "$INPUT_VERSION")
          elif [[ "$ENVIRONMENT" == "production" ]]; then
            version=$(task utils:generate-version -- "$SERVICE")
            image_tag=$(task utils:generate-version-tag -- "$SERVICE")
          else
            version=$(task utils:generate-extended-version -- "$SERVICE")
            image_tag=$(task utils:generate-extended-version-tag -- "$SERVICE")
          fi

          echo "version=${version}" >> "$GITHUB_OUTPUT"
          echo "image_tag=${image_tag}" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker images
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ${{ matrix.service }}
          push: true
          tags: ${{ steps.image-tag.outputs.image_tag }}
          platforms: linux/amd64 # TODO: add multi arch "linux/amd64,linux/arm64"
          # TODO: handle cache invalidation for version changes in package.json
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Trigger deploy as a separate workflow to:
      #   1. enable running it manually via workflow_dispatch
      #   2. keep workflows smaller and more focused
      # We could use reuseable workflow (with workflow_call trigger... but being able to trigger manually is nice)
      - name: Trigger Deploy
        if: ${{ !env.ACT }} # Don't trigger deploy when running locally
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run update-gitops-manifests.yaml \
            -f service=${{ matrix.service }} \
            -f version=${{ steps.image-tag.outputs.version }} \
            -f image_tag=${{ steps.image-tag.outputs.image_tag }} \
            -f environment=${{ needs.filter.outputs.environment }} \
            -r ${GITHUB_REF}
